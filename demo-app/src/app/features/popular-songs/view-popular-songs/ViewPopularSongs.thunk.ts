import {ActionReducerMapBuilder, createAsyncThunk} from "@reduxjs/toolkit";
import { ViewPopularSongsUseCase } from "./view-popular-Songs.usecase";
import {Future, Operational} from "../../../base/Future.ts";

//This thunk is generated by generate-thunks.ts , please do not modify it manually
export const ViewPopularSongsThunk = createAsyncThunk(
  "view-popular-Songs/ViewPopularSongs",
  async (arg: { input: { maxNumber: number } }, { rejectWithValue }) => {
    try {
      const usecase = container.get(ViewPopularSongsUseCase);
      return await usecase.execute(arg.input);
    } catch (err) {
      return rejectWithValue(err);
    }
  },
);

export const ViewPopularSongsReducer =(builder: ActionReducerMapBuilder<Future<Operational<Song>[]>>) =>{
    builder
        .addCase(ViewPopularSongsThunk.pending, (state) => {
            state.IsPending = true
            state.Error = null
        })
        .addCase(ViewPopularSongsThunk.fulfilled, (state, action) => {
            state.IsPending = false
            state.Value = container.get(ViewPopularSongsUseCase).apply(state.Value, action.payload);
        })
        .addCase(ViewPopularSongsThunk.rejected, (state, action) => {
            state.IsPending = false
            state.Error = new Error(action.error?.message ?? 'Unknown error');
        })
}